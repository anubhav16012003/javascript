"use strict" // treat all Js code as newer version

alert(3+3) //it will give error in node js, not in browser

console.log(typeof null) // output: object
console.log(typeof undefined) // ouput: undefined

* Conversion of Datatype to another:- 

  let anubhavScore = 33; // here we take anubhavScore as number 
  let stringNumber = String(anubhavScore); // and here we convert number to string
  console.log(anubhavScore); // here the output will be 33 but it is converted in String we can check it's type.
  console.log(typeof(anubhavScore)); // output will be string
  
* Converting following to Number:-
  A. "33" => 33
  B. "33abc" => NaN
  C. true => 1 & false => 0

* iske baad prefix and postfix pdhna MDN se

* === strict check (ye na sirf value ko check krta balki uske data-type ko bhi check krta hai)

* If we will check the typeof null then the result will be object always

* Primitive (Stack) & Non-Primitive (Heap) 

* String interpolation:- Instead of concatination of strings using + signs. Use backticks 
for example = 
let name = "anubhav";
let surname = " verma";
let age = 20;
console.log("My" + " name is " + name + surname + " and I am " + age + " years old.");
// instead we can do it like this
console.log(`Hello my name is ${name.toUpperCase()}${surname.toLowerCase()} and I am ${age} years old`);

* NOTE:- We can declare strings by 2 methods. 
example = 1. let check = "Anubhav";
            console.log(check);
          2. let myNamw = new String ("Anubhav");
            console.log(myName); 

* NOTE:- 1. TRIM:- let name = "            Anubhav Verma                         ";
console.log(name.trim()); //In this method it will remove all the white spaces automatically and the output will be `Anubhav Verma`
And it will remove the white spaces from the start and end only not from the middle

2. REPLACE:- let name = "Anubhdg Verma"
console.log(name.replace('dg', 'av')); //By this way, The output will be `Anubhav Verma`

3. INCLUDES:- You can check with the help of this that something exist in your string or not.
let name = "Anubhav Verma" 
console.log(name.includes("verma")) // it will return false
console.log(name.includes("Verma")) // it will return true

* toFixed (only used for numbers):- const number = 7417.426133;
console.log(number.toFixed(2)); // output = 7417.43; 

* const number = 7417.426133;
console.log(number.toString().length); // ess case me phele number ko string me bdla aur fir uski length pta kri

* const hundreds = 1000000000;
console.log(hundreds.toLocaleString()); // output = 1,000,000,000 international system ke hisab se commas lge 
console.log(hundreds.toLoacleString('en-IN'); // output = 1,00,00,00,000 Indian system ke hisab se commas lgenge 

* Note:-

1. NEGATIVE TO POSITIVE:- To change the negative sign of values into positive we will use abs 
for example:- let number = -4;
console.log(Math.abs(number)); // output:- 4

2. ROUND OFF:- It will remove the decimal
for example:- let number = 34.34;
console.log(Math.round(number));  // output:- 34

3. ROUND TO HIGHER NUMBER OR LOWER NUMBER:- We can round of to higher digit number or lower digit number 
fro example:- ;et number = 34.1 // I can make it 35 or 34 as my wish
console.log(Math.ceil(number)); // to make it 35 we will use ceil
console.log(Math.floor(number)); // to make it 34 we will use floor

4. To find the minimum & maximum number in an array:- we can find MAXIMUM and MINIMUM value in array.
for example:- let number = [1, 2, 3, 4, 6];
console.log(Math.min(...number)); // esse hum minimum value nikal skte
console.log(Math.max(...number)); // esse hum maximum value nikal skte

* TERNARY OPERATOR:- condition ? expressionIfTrue : expressionIfFalse;
"?"= indicates true & ":"= indicates false 
fro example:- let ifRaining = false;
let weather = ifRaining ? "Hn bhai baarish hori hai!" : "chutiya bna diya bhai tera";
console.log(weathera); // output:- chutiya bna diya bhai tera nhi hoti baarish

* NOTE:- console.log(MATH.random()); // esme jo number aaega hmesha vo 0 & 1 ke beech me aaega

* DATE:- Date is a object in a java-script

Q. What is the difference between slice and splice?
Ans. Use slice when you want to create a new array with a portion of the elements from an existing array.

example:- let number = [1, 2, 3, 4, 5];
let newSlicedNumber = number.slice(1, 4); // number.slice(start index, end index) 
aur esme (1, 4) me 4th index nhi hogi count 3rd tk count hogi
console.log(`Original array:- ${number}`); // output:- 1, 2, 3, 4, 5
console.log(`Sliced array:- ${newSlicedNumber}`); // output:- 2, 3, 4

Use splice when you want to modify the original array by adding, removing, or replacing elements. (seedha original array me change kregi)
for example:- let number = [1, 2, 3, 4, 5];
let newSplicedNumber = number.splice(1, 2, 3, 4) // number.slice(start index delete count, items to add 1, items to add 2)
console.log(`original array:- ${number}`); // output:- 1, 3, 4, 4, 5
console.log(`Spliced array:- ${newSplicedNumber}`); // output:- 2, 3
(newSpliceNumber me jo delete kr diye gye number vo show honge output me)

* Note:- We can also put an array inside an array (however this method is not preferred)
for example:- const marvel_heroes = ["Thor", "Hulk", "Hawkeye"];
const dc_heroes = ["Superman", "Batman", "Flash"];
marvel_heroes.push(dc_heroes);
console.log(marvel_heroes); // output:- [ 'Thor', 'Hulk', 'Hawkeye', [ 'Superman', 'Batman', 'Flash' ] ]
console.log(marvel_heroes[3][2]); // output:- Flash

2. Srpead method:- const marvel_heroes = ["Thor", "Hulk", "Hawkeye"]; (most preferred method)
const dc_heroes = ["Superman", "Batman", "Flash"];
const all_heroes = [...marvel_heroes, ...dc_heroes];
console.log(all_heroes); // output:- [ 'Thor', 'Hulk', 'Hawkeye', 'Superman', 'Batman', 'Flash' ]

3. Concat method:- const marvel_heroes = ["Thor", "Hulk", "Hawkeye"];
const dc_heroes = ["Superman", "Batman", "Flash"];
const all_heroes = marvel_heroes.concat(dc_heroes);
console.log(all_heroes); // ouput:- [ 'Thor', 'Hulk', 'Hawkeye', 'Superman', 'Batman', 'Flash' ]

4. flat method:- const all_heroes = ["Superman", ["Batman"], ["Thor", ["Loki"]], "Flash"]; (This method is used to solve 
array inside a array inside a array)
for example:- const simple_all_heroes = all_heroes.flat(2);
console.log(simple_all_heroes); // output:- [ 'Superman', 'Batman', 'Thor', 'Loki', 'Flash' ]

* We can also combine strings to make an array
for example:- const score1 = "hundred";
const score2 = "two-hundred";
const score3 = "three-hundred";
const combineScoreArray = Array.of(score1, score2, score3);
console.log(combineScoreArray); // output:- [ 'hundred', 'two-hundred', 'three-hundred' ]

2. const score1 = ["hundred", "two-hundred"];
const score2 = "two-hundred";
const score3 = "three-hundred";
const combineScoreArray = Array.of(...score1, score2, score3);
console.log(combineScoreArray);

